{"version":3,"sources":["components/Contador.jsx","components/ListaDeAlumnos.js","data.js","App.js","serviceWorker.js","index.js"],"names":["Contador","incrementar","setState","valor","state","console","log","decrementar","evaluarClass","className","this","onClick","React","Component","ListaDeAlumnos","props","handleChange","e","value","target","toLowerCase","filtrar","keyCode","alumnos","result","filter","first_name","includes","reset","document","getElementById","id","type","placeholder","onKeyUp","map","key","alumnoData","Alumno","last_name","dni","data","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.21a6949f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default class Contador extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            valor:0\r\n        }\r\n/*     this.incrementar = this.incrementar.bind(this); */\r\n    }\r\n    //opcion: arrow functions\r\n    incrementar = () =>{\r\n        const logger = () => {\r\n            console.log(this.state.valor);\r\n        }\r\n       this.setState({valor: this.state.valor + 1}, logger)\r\n    }\r\n    decrementar = () => {\r\n        if(this.state.valor <= 0) return\r\n        this.setState({valor: this.state.valor -1}) \r\n    }\r\n\r\n/*     // opcion: funcion \r\n    increentar(){\r\n        this.setState({valor: })\r\n    } */\r\n    evaluarClass = () =>{\r\n        if (this.state.valor >= 0 && this.state.valor <= 5){\r\n                return 'numeroBajo'\r\n            }else if(this.state.valor >= 6 && this.state.valor <= 10){\r\n                return 'numeroCorrecto'\r\n            }else {\r\n                return 'numeroAlto'\r\n            }\r\n        }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"contador\">\r\n                <h2>Contador</h2>\r\n                <h3>Mi valor es: <span className={this.evaluarClass(this.state.valor)}>{this.state.valor}</span></h3>\r\n                <button onClick={this.incrementar}>INCREMENTAR</button>\r\n                <button onClick={this.decrementar}>DECREMENTAR</button>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n/* function evaluarClass(value){\r\n    return 'numeroAlto'\r\n} */","import React from 'react';\r\n\r\nexport default class ListaDeAlumnos extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            alumnos: props.alumnos,\r\n            value: \"\"\r\n        }\r\n    }\r\n    handleChange= (e) => {\r\n        const value = e.target.value.toLowerCase();\r\n            this.setState({value: value}, this.filtrar)\r\n            if(e.keyCode === 8 || 229){\r\n                console.log(\"borro\")\r\n                this.setState({alumnos: this.props.alumnos}, this.filtrar);\r\n            }\r\n    }    \r\n    filtrar = () =>{\r\n        const result = this.state.alumnos.filter(e => e.first_name.toLowerCase().includes(this.state.value))\r\n        this.setState({alumnos: result})    \r\n    }\r\n    reset = () => {\r\n        this.setState({alumnos: this.props.alumnos}); \r\n        document.getElementById(\"buscar\").value = \"\";\r\n              \r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"alumnos\">\r\n                <h1>Alumnos: </h1>\r\n                <input id=\"buscar\" type=\"text\" placeholder=\"Buscar por nombre\" onKeyUp={this.handleChange}/>\r\n                <button onClick={this.reset}>RESETEAR LISTA</button>\r\n                <div className=\"datos\">\r\n                   {this.state.alumnos.map(e => <Alumno key={e.id} alumnoData={e} />)} \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst Alumno = (props) =>{\r\n    return (\r\n        <div>\r\n            <span>ID: {props.alumnoData.id} </span>\r\n            <span>{props.alumnoData.last_name}, </span>\r\n            <span className=\"name\">{props.alumnoData.first_name}</span> \r\n            <span>DNI: {props.alumnoData.dni}</span>\r\n        </div>\r\n    )\r\n} ","const data = [\r\n    {id: 0, first_name: 'Alejandro', last_name: 'Sobko', dni: 44647702},\r\n    {id: 1, first_name: 'Laura', last_name: 'Perez', dni: 35302288},\r\n    {id: 2, first_name: 'Candela', last_name: 'Gomez', dni: 57490871},\r\n    {id: 3, first_name: 'Emiliano', last_name: 'Gonzalez', dni: 66005465},\r\n    {id: 4, first_name: 'Camila', last_name: 'Rodriguez', dni: 65212571},\r\n    {id: 5, first_name: 'Sebastian', last_name: 'Hernandez', dni: 54101823},\r\n    {id: 6, first_name: 'Ezequiel', last_name: 'Blabla', dni: 57238635},\r\n    {id: 7, first_name: 'Melina', last_name: 'Foo', dni: 34251397},\r\n    {id: 8, first_name: 'Gustavo', last_name: 'Bar', dni: 64530537},\r\n    {id: 9, first_name: 'Jos√©', last_name: 'Baz', dni: 40073217}\r\n  ]\r\n  \r\n  export default data;\r\n  ","import React from 'react';\nimport './App.css';\nimport Contador from './components/Contador';\nimport ListaDeAlumnos from './components/ListaDeAlumnos';\nimport data  from './data.js';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Contador />\n      <hr/>\n      <ListaDeAlumnos alumnos={data} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}