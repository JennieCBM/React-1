{"version":3,"sources":["components/Contador.jsx","components/ListaDeAlumnos.js","data.js","components/NotFound.jsx","components/Home.jsx","components/Header.jsx","components/AlumnoData.jsx","App.js","serviceWorker.js","index.js"],"names":["Contador","incrementar","setState","valor","state","console","log","decrementar","evaluarClass","className","this","onClick","React","Component","ListaDeAlumnos","props","handleChange","event","target","value","result","alumnos","filter","e","first_name","toLowerCase","includes","last_name","reset","preventDefault","onSubmit","id","type","placeholder","onChange","map","key","alumnoData","Alumno","to","data","dni","exact","activeClassName","AlumnoData","nro","window","location","hash","split","alumno","App","Header","path","component","Home","NotFound","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8ca93bfb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default class Contador extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            valor:0\r\n        }\r\n/*     this.incrementar = this.incrementar.bind(this); */\r\n    }\r\n    //opcion: arrow functions\r\n    incrementar = () =>{\r\n        const logger = () => {\r\n            console.log(this.state.valor);\r\n        }\r\n       this.setState({valor: this.state.valor + 1}, logger)\r\n    }\r\n    decrementar = () => {\r\n        if(this.state.valor <= 0) return\r\n        this.setState({valor: this.state.valor -1}) \r\n    }\r\n\r\n/*     // opcion: funcion \r\n    increentar(){\r\n        this.setState({valor: })\r\n    } */\r\n    evaluarClass = () =>{\r\n        if (this.state.valor >= 0 && this.state.valor <= 5){\r\n                return 'numeroBajo'\r\n            }else if(this.state.valor >= 6 && this.state.valor <= 10){\r\n                return 'numeroCorrecto'\r\n            }else {\r\n                return 'numeroAlto'\r\n            }\r\n        }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"contador\">\r\n                <h1>Contador</h1>\r\n                <h3>Mi valor es: <span className={this.evaluarClass(this.state.valor)}>{this.state.valor}</span></h3>\r\n                <button onClick={this.incrementar}>INCREMENTAR</button>\r\n                <button onClick={this.decrementar}>DECREMENTAR</button>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n/* function evaluarClass(value){\r\n    return 'numeroAlto'\r\n} */","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\n//exporto ListaDeAlumnos en forma de clase para manejar el state\r\nexport default class ListaDeAlumnos extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            alumnos: props.alumnos\r\n        }\r\n    }\r\n\r\n    handleChange= (event) => {\r\n        if (!event.target.value){\r\n            this.setState({alumnos: this.props.alumnos});\r\n            return\r\n        }\r\n        console.log(event.target.value)\r\n        const result = this.state.alumnos.filter(e => e.first_name.toLowerCase().includes(event.target.value) || e.last_name.toLowerCase().includes(event.target.value))\r\n        this.setState({alumnos: result})\r\n    }    \r\n    reset = (event) => {\r\n        event.preventDefault();\r\n        this.setState({alumnos: this.props.alumnos}); \r\n        event.target.reset();          \r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"alumnos\">\r\n                <h1>Alumnos </h1>\r\n                <form onSubmit={this.reset}>\r\n                    <input id=\"buscar\" type=\"text\" placeholder=\"Ingresa nombre aquí\" onChange={this.handleChange}/>\r\n                    <input type=\"submit\" value=\"Resetear Lista\"></input>\r\n                </form>\r\n                    <div className=\"datos\">\r\n                   {this.state.alumnos.map(e => <Alumno key={e.id} alumnoData={e} />)} \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst Alumno = (props) =>{\r\n    return (\r\n        <div>\r\n            {/* <span>ID: {props.alumnoData.id} </span> */}\r\n            <span>{props.alumnoData.last_name}, </span>\r\n            <span className=\"name\">{props.alumnoData.first_name}</span> \r\n            {/* <span>DNI: {props.alumnoData.dni}</span> */}\r\n            <Link to={`/alumnos/${props.alumnoData.id}`}>Ver Datos</Link>\r\n        </div>\r\n    )\r\n} ","const data = [\r\n    {id: 0, first_name: 'Alejandro', last_name: 'Sobko', dni: 44647702},\r\n    {id: 1, first_name: 'Laura', last_name: 'Perez', dni: 35302288},\r\n    {id: 2, first_name: 'Candela', last_name: 'Gomez', dni: 57490871},\r\n    {id: 3, first_name: 'Emiliano', last_name: 'Gonzalez', dni: 66005465},\r\n    {id: 4, first_name: 'Camila', last_name: 'Rodriguez', dni: 65212571},\r\n    {id: 5, first_name: 'Sebastian', last_name: 'Hernandez', dni: 54101823},\r\n    {id: 6, first_name: 'Ezequiel', last_name: 'Blabla', dni: 57238635},\r\n    {id: 7, first_name: 'Melina', last_name: 'Foo', dni: 34251397},\r\n    {id: 8, first_name: 'Gustavo', last_name: 'Bar', dni: 64530537},\r\n    {id: 9, first_name: 'José', last_name: 'Baz', dni: 40073217}\r\n  ]\r\n  \r\n  export default data;\r\n  ","import React from'react'\r\n\r\nexport default ()=> {\r\n    return (\r\n        <div>\r\n            <h1>Not Found</h1>\r\n        </div>\r\n    )\r\n}","import React from'react'\r\n\r\nexport default ()=> {\r\n    return (\r\n        <div>\r\n            <h1>Bienvenido</h1>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nexport default () => \r\n    <header>\r\n        <nav>\r\n            <NavLink exact activeClassName='active' to='/'>Home</NavLink>\r\n            <NavLink activeClassName='active' to='/contador'>Contador</NavLink>\r\n            <NavLink activeClassName='active' to='/Lista'>Lista</NavLink>    \r\n        </nav>\r\n    </header>","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport const AlumnoData = (props) =>{\r\n    let nro = window.location.hash.split('/')[2]\r\n    return(\r\n    <div className=\"alumno-data\">\r\n        <div className=\"alumno\">\r\n            <h3>Información del alumno</h3>\r\n            <p>Nombre: {props.alumno[nro].first_name} {props.alumno[nro].last_name}.</p>\r\n            <p>DNI: {props.alumno[nro].dni}</p>\r\n            <p>Numero de identificacion: {props.alumno[nro].id}</p>\r\n        </div>\r\n        <Link to=\"/Lista\">Volver al listado</Link>\r\n    </div>\r\n    )\r\n}","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Contador from './components/Contador';\nimport ListaDeAlumnos from './components/ListaDeAlumnos';\nimport data  from './data.js';\nimport NotFound from './components/NotFound';\nimport Home from './components/Home'\nimport Header from './components/Header'\nimport { AlumnoData } from './components/AlumnoData';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <HashRouter>\n        <Header />\n        <Switch>\n          <Route exact path='/' component={Home}/>\n          <Route path='/contador' component={Contador}/>\n          <Route path='/Lista'>\n            <ListaDeAlumnos alumnos={data}/>\n          </Route>\n          <Route path='/alumnos/:id'>\n            <AlumnoData alumno={data}/>\n          </Route>\n          <Route component={NotFound} />\n        </Switch>\n    </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}